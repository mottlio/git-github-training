How did viewing a diff between two versions of a file help you see the bug that was introduced?

I learned about the diff command in the terminal. It heleped me to locate the lines of code which have been changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I can quickly correct mistakes. I can better understand changes made. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

A programmer has control over how large the commits are and can make sure that each commit represents a logical change in the code. This change can be described in a comment to the commit. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because coding often involves work on different files in parallel - eg. stylesheet in CSS and layout in HTML. Working in Google Docs mostly involves work on one document. 

How can you use the commands git log and git diff to view the history of files?

You locate the commit which included th echanges you are interested in (you find it by name of commit or date) and compare using the diff command in git.

How might using version control make you more confident to make changes that could break something?

I always know that I can revert to an earlier version of the file. 

Now that you have your workspace set up, what do you want to try using Git for?

I want to try using Git for a real project